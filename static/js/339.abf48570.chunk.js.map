{"version":3,"file":"static/js/339.abf48570.chunk.js","mappings":"iRA2DA,EAnD4B,WAExB,IAAOA,GAAMC,EAAAA,EAAAA,MAAND,GACDE,GAAUC,EAAAA,EAAAA,IAAiB,YAAa,SAAXC,YAA6BC,SAAS,IACnEC,GAAQH,EAAAA,EAAAA,IAAiB,YAAa,SAAXC,YAA6BE,KAAK,IAC7DC,GAAYJ,EAAAA,EAAAA,IAAiB,YAAW,SAATK,UAAyBC,MAAM,IACpE,GAAoCC,EAAAA,EAAAA,UAAuB,MAAK,eAAzDC,EAAU,KAAEC,EAAa,KAChC,GAA8CF,EAAAA,EAAAA,UAAsB,IAAG,eAAhEG,EAAe,KAAEC,EAAkB,KACpCC,GAAWC,EAAAA,EAAAA,KAcjB,OAZAC,EAAAA,EAAAA,YAAU,WACNF,GAASG,EAAAA,EAAAA,IAAkBlB,GAC/B,GAAG,KAEHiB,EAAAA,EAAAA,YAAU,WACNH,EAAmBP,EAAUY,QAAO,SAACC,GAAa,OAAKA,EAAGpB,KAAOqB,OAAOrB,EAAG,IAC/E,GAAG,CAACO,KAEJU,EAAAA,EAAAA,YAAU,WACNL,EAAcN,EAClB,GAAG,CAACA,KAGA,8BAEKJ,GAoBD,SAAC,IAAO,KAnBR,yBAEIS,IACA,gBAAKW,UAAU,QAAO,UAClB,SAAC,IAAQ,CACTC,UAAU,EACVV,gBAAiBA,EACjBP,MAAOK,EACPa,UAAW,UACXC,SAAUd,EAAWc,SACrBC,KAAMf,EAAWe,KACjBC,MAAOhB,EAAWgB,MAClBC,MAAOjB,EAAWiB,MAClBC,MAAOlB,EAAWkB,MAClB7B,GAAIA,GAAS,SASjC,C","sources":["components/pages/pizza.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getOnePizzahAsync } from '../../state/reducers/pizzas';\r\nimport { CartPizza, Pizza, UseTypedDispatch, UseTypedSelector } from '../../@types/types';\r\nimport OnePizza from '../PizzaBlock/onePizza';\r\nimport './pizza.scss'\r\nimport Loading from '../Loading/loading';\r\n\r\nconst PizzaInfo: React.FC = () => {\r\n\r\n    const {id} = useParams<{id: string}>();\r\n    const loading = UseTypedSelector(({pizzasState}) => pizzasState.isLoading);\r\n    const pizza = UseTypedSelector(({pizzasState}) => pizzasState.pizza);\r\n    const cartPizza = UseTypedSelector(({cartState}) => cartState.pizzas);\r\n    const [pizzaLocal, setPizzaLocal] = useState<Pizza | null>(null);\r\n    const [localCartPizzas, setLocalCartPizzas] = useState<CartPizza[]>([])\r\n    const dispatch = UseTypedDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getOnePizzahAsync(id));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setLocalCartPizzas(cartPizza.filter((el: CartPizza) => el.id === Number(id)))\r\n    }, [cartPizza])\r\n\r\n    useEffect(() => {\r\n        setPizzaLocal(pizza);\r\n    }, [pizza]);\r\n\r\n    return (\r\n        <>\r\n        {\r\n            !loading ? \r\n            <div>\r\n                {\r\n                pizzaLocal &&\r\n                <div className='pizza'>\r\n                    <OnePizza\r\n                    fullInfo={true}\r\n                    localCartPizzas={localCartPizzas}\r\n                    pizza={pizzaLocal}\r\n                    classname={'pizza__'}\r\n                    imageUrl={pizzaLocal.imageUrl}\r\n                    name={pizzaLocal.name}\r\n                    types={pizzaLocal.types}\r\n                    sizes={pizzaLocal.sizes}\r\n                    price={pizzaLocal.price}\r\n                    id={id ? id: 0}\r\n                    />\r\n                </div>\r\n                }\r\n            </div>:\r\n            <Loading/>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PizzaInfo;\r\n"],"names":["id","useParams","loading","UseTypedSelector","pizzasState","isLoading","pizza","cartPizza","cartState","pizzas","useState","pizzaLocal","setPizzaLocal","localCartPizzas","setLocalCartPizzas","dispatch","UseTypedDispatch","useEffect","getOnePizzahAsync","filter","el","Number","className","fullInfo","classname","imageUrl","name","types","sizes","price"],"sourceRoot":""}